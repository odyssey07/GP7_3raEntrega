/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package proyectotransversal.vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import proyectotransversal.modelo.Alumno;
import proyectotransversal.modelo.Inscripcion;
import proyectotransversal.modelo.Materia;
import proyectotransversal.persistencia.AlumnoData;
import proyectotransversal.persistencia.InscripcionData;
import proyectotransversal.persistencia.MateriaData;

/**
 * @author Osman Herman
 * @author Ulises Perez
 * @author Nahuel Alegre
 * @author Nicolas Dominguez
 */
public class VistaInscripccion extends javax.swing.JInternalFrame {
    private MateriaData md = new MateriaData();
    private AlumnoData ad = new AlumnoData();
    private InscripcionData id = new InscripcionData();
    
    private DefaultTableModel modelo = new DefaultTableModel();
    
    private List<Materia> listaMaterias;
    private List<Alumno> listaAlumnos = ad.listarAlumnos();
    
   
    /**
     * Creates new form VistaInscripccion
     */
    public VistaInscripccion() {
        initComponents();
                
        cargarAlumnos();
        armarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rbtnInscriptas = new javax.swing.JRadioButton();
        rbtnNoInscriptas = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMaterias = new javax.swing.JTable();
        btnInscribir = new javax.swing.JButton();
        btnAnularInscripcion = new javax.swing.JButton();
        cboxAlumno = new javax.swing.JComboBox<>();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inscripcciones");

        jLabel2.setText("Seleccione un alumno");

        rbtnInscriptas.setText("Inscriptas");
        rbtnInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnInscriptasActionPerformed(evt);
            }
        });

        rbtnNoInscriptas.setText("No Inscriptas");
        rbtnNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNoInscriptasActionPerformed(evt);
            }
        });

        jLabel3.setText("Seleccione una materia");

        tablaMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaMaterias);

        btnInscribir.setText("Inscribir");
        btnInscribir.setEnabled(false);
        btnInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInscribirActionPerformed(evt);
            }
        });

        btnAnularInscripcion.setText("Anular inscripcion");
        btnAnularInscripcion.setEnabled(false);
        btnAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnularInscripcionActionPerformed(evt);
            }
        });

        cboxAlumno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboxAlumnoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAnularInscripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(rbtnInscriptas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbtnNoInscriptas))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboxAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnNoInscriptas)
                    .addComponent(rbtnInscriptas)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInscribir)
                    .addComponent(btnAnularInscripcion))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInscribirActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaMaterias.getSelectedRow();
        if(filaSeleccionada != -1) {
            Alumno alumno = (Alumno) cboxAlumno.getSelectedItem();
            int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
            String nombreMateria = (String) modelo.getValueAt(filaSeleccionada, 1);
            int anioMateria = (Integer) modelo.getValueAt(filaSeleccionada, 2);
            
            Materia materia = new Materia(idMateria, nombreMateria, anioMateria);
            Inscripcion inscripcion = new Inscripcion(alumno, materia, 0);
            
            id.guardarInscripcion(inscripcion);
            
            modelo.removeRow(filaSeleccionada);
        }
    }//GEN-LAST:event_btnInscribirActionPerformed

    private void btnAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnularInscripcionActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = tablaMaterias.getSelectedRow();
        if(filaSeleccionada != -1) {
            Alumno alumno = (Alumno) cboxAlumno.getSelectedItem();
            int idMateria = (Integer) modelo.getValueAt(filaSeleccionada, 0);
            
            id.borrarInscripcion(alumno.getIdAlumno(), idMateria);
            
            modelo.removeRow(filaSeleccionada);
        }
    }//GEN-LAST:event_btnAnularInscripcionActionPerformed

    private void rbtnInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnInscriptasActionPerformed
        // TODO add your handling code here:
        modelo.setRowCount(0);
        
        rbtnNoInscriptas.setSelected(false);
        btnInscribir.setEnabled(false);
        btnAnularInscripcion.setEnabled(true);
        
        cargarMaterias(true);
    }//GEN-LAST:event_rbtnInscriptasActionPerformed

    private void rbtnNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNoInscriptasActionPerformed
        // TODO add your handling code here:
        modelo.setRowCount(0);
        
        rbtnInscriptas.setSelected(false);
        btnInscribir.setEnabled(true);
        btnAnularInscripcion.setEnabled(false);
        
        cargarMaterias(false);
    }//GEN-LAST:event_rbtnNoInscriptasActionPerformed

    private void cboxAlumnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboxAlumnoItemStateChanged
        // TODO add your handling code here:
        modelo.setRowCount(0);
        
        rbtnInscriptas.setSelected(false);
        rbtnNoInscriptas.setSelected(false);
        btnInscribir.setEnabled(false);
        btnAnularInscripcion.setEnabled(false);
    }//GEN-LAST:event_cboxAlumnoItemStateChanged



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnularInscripcion;
    private javax.swing.JButton btnInscribir;
    private javax.swing.JComboBox<Alumno> cboxAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbtnInscriptas;
    private javax.swing.JRadioButton rbtnNoInscriptas;
    private javax.swing.JTable tablaMaterias;
    // End of variables declaration//GEN-END:variables
    
    private void cargarAlumnos() {
        for (Alumno a : listaAlumnos) {
            cboxAlumno.addItem(a);
        }
    }

    private void armarTabla() {
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        tablaMaterias.setModel(modelo);
    }
    
    private void cargarMaterias(boolean inscriptas) {
        Alumno alumno = (Alumno) cboxAlumno.getSelectedItem();
        
        if (inscriptas) {
            listaMaterias = (ArrayList) id.obtenerMateriasDeAlumno(alumno.getIdAlumno());
        } else {
            listaMaterias = (ArrayList) id.obtenerNoMateriasDeAlumno(alumno.getIdAlumno());
        }
        
        for(Materia m : listaMaterias) {
            modelo.addRow(new Object[] {
                m.getIdMateria(),
                m.getNombre(),
                m.getAñoMateria()
            });
        }
    }
}
